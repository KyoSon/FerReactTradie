{"ast":null,"code":"var _jsxFileName = \"C:\\\\sq\\\\Exercise\\\\Job\\\\Fergus\\\\DeveloperTest\\\\fer-react-tradie\\\\src\\\\Component\\\\Notes\\\\NotesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useLocation } from 'react-router-dom';\nimport { AppContext } from '../../App';\nimport Note from './Note';\nimport AddNote from './AddNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesList = () => {\n  _s();\n\n  const {\n    notes,\n    setNotes\n  } = useContext(AppContext);\n  let location = useLocation();\n  const jobid = location.state.jobid;\n\n  const handleDeleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const handleAddNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      jobid: jobid,\n      date: date.toLocaleDateString()\n    };\n    console.log(notes);\n    let newNotes = [];\n    newNotes = notes.length > 0 ? [...notes, newNote] : newNotes.push(newNote);\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-list\",\n    children: [notes.length > 0 && notes.filter(n => n.id.toLowerCase().includes(jobid)).map(note => /*#__PURE__*/_jsxDEV(Note, {\n      id: note.id,\n      text: note.text,\n      date: note.date,\n      handleDeleteNote: handleDeleteNote\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddNote, {\n      handleAddNote: handleAddNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotesList, \"SpiDYLACsH42h/soUi3Z4wE0gzM=\", false, function () {\n  return [useLocation];\n});\n\n_c = NotesList;\nexport default NotesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useState","useContext","nanoid","useLocation","AppContext","Note","AddNote","NotesList","notes","setNotes","location","jobid","state","handleDeleteNote","id","newNotes","filter","note","handleAddNote","text","date","Date","newNote","toLocaleDateString","console","log","length","push","n","toLowerCase","includes","map"],"sources":["C:/sq/Exercise/Job/Fergus/DeveloperTest/fer-react-tradie/src/Component/Notes/NotesList.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { nanoid } from 'nanoid';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { AppContext } from '../../App';\r\nimport Note from './Note'\r\nimport AddNote from './AddNote'\r\n\r\nconst NotesList = () => {\r\n    const { notes, setNotes } = useContext(AppContext);\r\n    let location = useLocation();\r\n    const jobid = location.state.jobid;\r\n\r\n    const handleDeleteNote = (id) => {\r\n        const newNotes = notes.filter((note) => note.id !== id);\r\n        setNotes(newNotes);\r\n    };\r\n\r\n    const handleAddNote = (text) => {\r\n        const date = new Date();\r\n        const newNote = {\r\n            id: nanoid(),\r\n            jobid: jobid,\r\n            date: date.toLocaleDateString(),\r\n        };\r\n        console.log(notes)\r\n        let newNotes = [];\r\n        newNotes = notes.length > 0 ? [...notes, newNote] : newNotes.push(newNote);\r\n        setNotes(newNotes);\r\n    };\r\n\r\n    return (\r\n        <div className='note-list'>\r\n            {notes.length > 0 && notes.filter((n) => n.id.toLowerCase().includes(jobid)).map((note) => (\r\n                <Note key={note.id}\r\n                    id={note.id}\r\n                    text={note.text}\r\n                    date={note.date}\r\n                    handleDeleteNote={handleDeleteNote}\r\n                />\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBR,UAAU,CAACG,UAAD,CAAtC;EACA,IAAIM,QAAQ,GAAGP,WAAW,EAA1B;EACA,MAAMQ,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAeD,KAA7B;;EAEA,MAAME,gBAAgB,GAAIC,EAAD,IAAQ;IAC7B,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAnC,CAAjB;IACAL,QAAQ,CAACM,QAAD,CAAR;EACH,CAHD;;EAKA,MAAMG,aAAa,GAAIC,IAAD,IAAU;IAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;IACA,MAAMC,OAAO,GAAG;MACZR,EAAE,EAAEZ,MAAM,EADE;MAEZS,KAAK,EAAEA,KAFK;MAGZS,IAAI,EAAEA,IAAI,CAACG,kBAAL;IAHM,CAAhB;IAKAC,OAAO,CAACC,GAAR,CAAYjB,KAAZ;IACA,IAAIO,QAAQ,GAAG,EAAf;IACAA,QAAQ,GAAGP,KAAK,CAACkB,MAAN,GAAe,CAAf,GAAmB,CAAC,GAAGlB,KAAJ,EAAWc,OAAX,CAAnB,GAAyCP,QAAQ,CAACY,IAAT,CAAcL,OAAd,CAApD;IACAb,QAAQ,CAACM,QAAD,CAAR;EACH,CAXD;;EAaA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,WACKP,KAAK,CAACkB,MAAN,GAAe,CAAf,IAAoBlB,KAAK,CAACQ,MAAN,CAAcY,CAAD,IAAOA,CAAC,CAACd,EAAF,CAAKe,WAAL,GAAmBC,QAAnB,CAA4BnB,KAA5B,CAApB,EAAwDoB,GAAxD,CAA6Dd,IAAD,iBAC7E,QAAC,IAAD;MACI,EAAE,EAAEA,IAAI,CAACH,EADb;MAEI,IAAI,EAAEG,IAAI,CAACE,IAFf;MAGI,IAAI,EAAEF,IAAI,CAACG,IAHf;MAII,gBAAgB,EAAEP;IAJtB,GAAWI,IAAI,CAACH,EAAhB;MAAA;MAAA;MAAA;IAAA,QADiB,CADzB,eASI,QAAC,OAAD;MAAS,aAAa,EAAEI;IAAxB;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CApCD;;GAAMX,S;UAEaJ,W;;;KAFbI,S;AAsCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}